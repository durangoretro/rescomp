package com.durangoretro.rescomp;

import java.awt.image.BufferedImage;
import java.io.File;
import java.util.List;

import javax.imageio.ImageIO;

public class ImageGenerator {

	
	
	public static byte[] convertToDurango(String s) throws Exception {
		final File file = new File(s);
		final BufferedImage image = ImageIO.read(file);
		byte pixels[] = new byte[8192];
		int i=0;
		
		for(int row=0; row < image.getHeight(); row++) {
			for(int col=0; col<image.getWidth(); col+=2) {
				pixels[i++]=Palette.getColorByte(image.getRGB(col, row), image.getRGB(col+1, row));				
			}			
		}
		return pixels;				
	}
	
	public static String getHexString(byte[] pixels) {
		StringBuilder sb = new StringBuilder(500);		
		for(int i=0; i<pixels.length; i++) {
			if(i%32==0) {
				sb.append(".byt ");
			}
			sb.append(String.format("$%02X",pixels[i])).append(',');
			if(i%32==31) {
				sb.append("\n");
			}
		}		
		return sb.toString();
	}

	/*
 const unsigned char tiles[8192] = {
0x11,0x44,0x44,0x44,0x11,0x41,0x44,0x44,0x11,0x14,0x44,0x44,0x11,0x11,0x44,0x44,0x41,0x11,0x14,0x44,0x41,0x11,0x14,0x44,0x94,0x44,0x44,0x44,0x94,0x44,0x44,0x44,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
};

*/
	
		
	public static void main(final String args[]) throws Exception {
		byte[] pixels = convertToDurango("/tmp/pong.png");
		byte [] encoded = new RLEEncoder().encode(2, pixels);
		System.out.println("----- IMAGE ------");
		System.out.println(getHexString(encoded));
		System.out.println("\n----- ----- ------");				
	}
}
